{"version":3,"file":"static/js/536.dab24ff6.chunk.js","mappings":"yPAEaA,GAAWC,EAAAA,EAAAA,IAAO,KAAPA,CAAH,sH,IAQGA,EAAAA,EAAAA,IAAO,KAAPA,CAAH,wD,QCwCrB,EA7Ca,WACX,OAAmCC,EAAAA,EAAAA,UAAS,IAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA6BF,EAAAA,EAAAA,WAAS,GAAtC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OAVAE,EAAAA,EAAAA,YAAU,WACHF,IACLD,GAAW,IACXI,EAAAA,EAAAA,IAAeH,GACZI,MAAK,SAAAC,GACJR,EAAcQ,EAASC,MACvBP,GAAW,EACZ,IACAQ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACf,GAAE,CAACR,KAEF,gCACGF,IAAU,SAAC,IAAD,KACX,UAACL,EAAD,WACGG,GACCA,EAAUe,KAAI,SAAAC,GAEZ,OADAH,QAAQC,IAAI,SAEV,2BACE,gBACEG,IACED,EAAKE,aAAL,0CACuCF,EAAKE,cACxC,gFAENC,MAAM,MACNC,OAAO,MACPC,IAAKL,EAAKM,QAEZ,kCAAUN,EAAKM,SACf,kCAAUN,EAAKO,eAZRP,EAAKQ,GAejB,IACmB,IAArBxB,EAAUyB,SAAgB,wCAE7B,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAAC,IAAD,QAGzB,C,+LC9CDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD1D,cACCpB,EADD,yBAGEA,EAASO,MAHX,kEAMA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAA8B3B,GAA9B,uFACkBwB,EAAAA,EAAAA,IAAA,gBACZxB,EADY,oBACOyB,EADP,oBADlB,cACCpB,EADD,yBAKEA,EAASO,MALX,kEAQA,SAAeT,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,uFACkBwB,EAAAA,EAAAA,IAAA,gBACZxB,EADY,4BACeyB,EADf,oBADlB,cACCpB,EADD,yBAKEA,EAASO,MALX,kEAQA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAAiC5B,GAAjC,uFACkBwB,EAAAA,EAAAA,IAAA,gBACZxB,EADY,4BACeyB,EADf,oBADlB,cACCpB,EADD,yBAKEA,EAASO,MALX,kEAQA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBN,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCK,EADnC,gCADlB,cACCzB,EADD,yBAKEA,EAASO,MALX,kE","sources":["components/Cast/cast.styled.jsx","components/Cast/cast.jsx","services/fetchMovieApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled('ul')`\n  display: flex;\n  gap: 10px;\n  list-style: none;\n  margin-top: 20px;\n  flex-wrap: wrap;\n`;\n\nexport const CastItem = styled('ul')`\n  display: flex;\n  gap: 10px;\n`;\n","import { useEffect, useState, Suspense } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/fetchMovieApi';\nimport { Loader } from 'components/loader/loader';\nimport { CastList } from './cast.styled';\nconst Cast = () => {\n  const [movieCast, setAMovieCast] = useState([]);\n  const [loader, setALoader] = useState(false);\n  const { movieId } = useParams();\n  useEffect(() => {\n    if (!movieId) return;\n    setALoader(true);\n    fetchMovieCast(movieId)\n      .then(response => {\n        setAMovieCast(response.cast);\n        setALoader(false);\n      })\n      .catch(error => console.log(error));\n  }, [movieId]);\n  return (\n    <>\n      {loader && <Loader />}\n      <CastList>\n        {movieCast &&\n          movieCast.map(data => {\n            console.log('sdsd');\n            return (\n              <li key={data.id}>\n                <img\n                  src={\n                    data.profile_path\n                      ? `https://image.tmdb.org/t/p/w200/${data.profile_path}`\n                      : 'https://cdn.pixabay.com/photo/2018/03/22/02/37/background-3249063_960_720.png'\n                  }\n                  width=\"200\"\n                  height=\"250\"\n                  alt={data.name}\n                />\n                <p>Name: {data.name}</p>\n                <p>Role: {data.character}</p>\n              </li>\n            );\n          })}\n        {movieCast.length === 0 && <h3>No cast</h3>}\n      </CastList>\n      <Suspense fallback={<Loader />} />\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '71c93644ec2284a1c063a4cc462c4087';\n\nexport async function fetchTrends() {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  return response.data;\n}\n\nexport async function fetchMovieById(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n}\n\nexport async function fetchMovieByQuery(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return response.data;\n}\n"],"names":["CastList","styled","useState","movieCast","setAMovieCast","loader","setALoader","movieId","useParams","useEffect","fetchMovieCast","then","response","cast","catch","error","console","log","map","data","src","profile_path","width","height","alt","name","character","id","length","Suspense","fallback","axios","API_KEY","fetchTrends","fetchMovieById","fetchMovieReviews","fetchMovieByQuery","query"],"sourceRoot":""}