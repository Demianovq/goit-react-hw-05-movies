{"version":3,"file":"static/js/905.299a22c9.chunk.js","mappings":"+RAGaA,GAAiBC,EAAAA,EAAAA,IAAO,KAAPA,CAAH,wDAKdC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,wJAURG,GAAcH,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,4G,iBCbXI,EAAY,SAAC,GAAc,IAEnBC,EAFOC,EAAW,EAAXA,KACpBC,GAAWC,EAAAA,EAAAA,MAKjB,OACE,UAACT,EAAD,YACE,gBACEU,IACEH,EAAKI,YAAL,0CACuCJ,EAAKI,aACxC,gFAENC,MAAM,MACNC,OAAO,MACPC,IAAKP,EAAKQ,SAEZ,4BACE,0BACGR,EAAKQ,MADR,IACgB,IAAIC,KAAKT,EAAKU,cAAcC,cAD5C,QAIA,wCAAgBC,KAAKC,MAA0B,GAApBb,EAAKc,cAAhC,QACA,sCACA,uBAAId,EAAKe,YACT,qCACA,wBAzBahB,EAyBEC,EAAKD,OAxBnBA,EACEA,EAAOiB,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MADxB,cAyBhB,SAACxB,EAAD,CAAUyB,GAAG,OAAOC,MAAOpB,EAASoB,MAApC,mBAGA,SAACxB,EAAD,CAAauB,GAAG,UAAUC,MAAOpB,EAASoB,MAA1C,sBAIA,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAAC,IAAD,WAI3B,EC1CYC,GAAU9B,EAAAA,EAAAA,IAAO,SAAPA,CAAH,iNCIP+B,EAAe,WAC1B,OAA2BC,EAAAA,EAAAA,UAAS,IAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACX/B,GAAWC,EAAAA,EAAAA,MASjB,OARA+B,EAAAA,EAAAA,YAAU,WACHJ,IACLK,EAAAA,EAAAA,IAAeL,GACZM,MAAK,SAAAC,GACJR,EAAUQ,EACX,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACT,KAEF,gCACGF,IACC,iCACE,SAACH,EAAD,CACEiB,KAAK,SACLC,QAAS,WAAO,IAAD,IACbX,EAAQ,oBAAC9B,EAASoB,aAAV,aAAC,EAAgBsB,YAAjB,QAAyB,IAClC,EAJH,sBAQA,SAAC7C,EAAD,CAAWE,KAAM2B,EAAON,MAAOpB,EAASoB,YAG5C,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,QAIP,EAED,G,+LCvCAqB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD1D,cACCT,EADD,yBAGEA,EAASpC,MAHX,kEAMA,SAAekC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BL,GAA9B,uFACkBe,EAAAA,EAAAA,IAAA,gBACZf,EADY,oBACOgB,EADP,oBADlB,cACCT,EADD,yBAKEA,EAASpC,MALX,kEAQA,SAAe+C,EAAtB,+CAAO,OAAP,oBAAO,WAA8BlB,GAA9B,uFACkBe,EAAAA,EAAAA,IAAA,gBACZf,EADY,4BACegB,EADf,oBADlB,cACCT,EADD,yBAKEA,EAASpC,MALX,kEAQA,SAAegD,EAAtB,+CAAO,OAAP,oBAAO,WAAiCnB,GAAjC,uFACkBe,EAAAA,EAAAA,IAAA,gBACZf,EADY,4BACegB,EADf,oBADlB,cACCT,EADD,yBAKEA,EAASpC,MALX,kEAQA,SAAeiD,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBN,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCK,EADnC,gCADlB,cACCd,EADD,yBAKEA,EAASpC,MALX,kE","sources":["components/moviecard/moviecard.styled.jsx","components/moviecard/moviecard.jsx","pages/moviedetails/moviedetails.styled.jsx","pages/moviedetails/moviedetails.jsx","services/fetchMovieApi.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieCardBlock = styled('ul')`\n  display: flex;\n  gap: 50px;\n`;\n\nexport const CastLink = styled(Link)`\n  text-decoration: none;\n  color: #212121;\n  margin-right: 20px;\n  margin-top: 50px;\n  &:hover {\n    color: #87cefa;\n  }\n`;\n\nexport const ReviewsLink = styled(Link)`\n  text-decoration: none;\n  color: #212121;\n  &:hover {\n    color: #87cefa;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Suspense } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { MovieCardBlock, CastLink, ReviewsLink } from './moviecard.styled';\nimport { Loader } from 'components/loader/loader';\nexport const MovieCard = ({ data }) => {\n  const location = useLocation();\n  const getAGenres = genres => {\n    if (!genres) return 'No info';\n    return genres.map(genre => genre.name).join(', ');\n  };\n  return (\n    <MovieCardBlock>\n      <img\n        src={\n          data.poster_path\n            ? `https://image.tmdb.org/t/p/w400/${data.poster_path}`\n            : 'https://cdn.pixabay.com/photo/2018/03/22/02/37/background-3249063_960_720.png'\n        }\n        width=\"400\"\n        height=\"400\"\n        alt={data.title}\n      />\n      <div>\n        <h2>\n          {data.title}({new Date(data.release_date).getFullYear()})\n        </h2>\n\n        <p>User Score: {Math.round(data.vote_average * 10)}%</p>\n        <h2>Overview</h2>\n        <p>{data.overview}</p>\n        <h2>Gengres</h2>\n        <p>{getAGenres(data.genres)}</p>\n        <CastLink to=\"cast\" state={location.state}>\n          Cast\n        </CastLink>\n        <ReviewsLink to=\"reviews\" state={location.state}>\n          Reviews\n        </ReviewsLink>\n\n        <Suspense fallback={<Loader />} />\n      </div>\n    </MovieCardBlock>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    release_date: PropTypes.string,\n\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n","import styled from 'styled-components';\n\nexport const BackBtn = styled('button')`\n  background-color: #4682b4;\n  border: none;\n  padding: 8px 10px;\n  margin-left: 10px;\n  margin-top: 10px;\n  border-radius: 10%;\n  &:hover {\n    background-color: #87cefa;\n  }\n`;\n","import { useParams, useNavigate, useLocation, Outlet } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport { fetchMovieById } from 'services/fetchMovieApi';\nimport { MovieCard } from 'components/moviecard/moviecard';\nimport { BackBtn } from './moviedetails.styled';\nimport { Loader } from 'components/loader/loader';\nexport const MovieDetails = () => {\n  const [movie, SetAMovie] = useState([]);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    if (!movieId) return;\n    fetchMovieById(movieId)\n      .then(response => {\n        SetAMovie(response);\n      })\n      .catch(error => console.log(error));\n  }, [movieId]);\n  return (\n    <>\n      {movie && (\n        <>\n          <BackBtn\n            type=\"button\"\n            onClick={() => {\n              navigate(location.state?.from ?? '/');\n            }}\n          >\n            Go Back\n          </BackBtn>\n          <MovieCard data={movie} state={location.state} />\n        </>\n      )}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '71c93644ec2284a1c063a4cc462c4087';\n\nexport async function fetchTrends() {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  return response.data;\n}\n\nexport async function fetchMovieById(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n}\n\nexport async function fetchMovieByQuery(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return response.data;\n}\n"],"names":["MovieCardBlock","styled","CastLink","Link","ReviewsLink","MovieCard","genres","data","location","useLocation","src","poster_path","width","height","alt","title","Date","release_date","getFullYear","Math","round","vote_average","overview","map","genre","name","join","to","state","Suspense","fallback","BackBtn","MovieDetails","useState","movie","SetAMovie","movieId","useParams","navigate","useNavigate","useEffect","fetchMovieById","then","response","catch","error","console","log","type","onClick","from","axios","API_KEY","fetchTrends","fetchMovieCast","fetchMovieReviews","fetchMovieByQuery","query"],"sourceRoot":""}