{"version":3,"file":"static/js/574.56a0f2f9.chunk.js","mappings":"uQAGaA,GAAYC,EAAAA,EAAAA,IAAO,SAAPA,CAAH,4LAWTC,GAAOD,EAAAA,EAAAA,IAAO,OAAPA,CAAH,mEAKJE,GAAYF,EAAAA,EAAAA,IAAO,QAAPA,CAAH,gIASTG,GAAaH,EAAAA,EAAAA,IAAO,KAAPA,CAAH,6CAIVI,GAAkBJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,4G,SCoC5B,EAxDe,WAAO,IAAD,EACnB,GAA6BM,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAmCF,EAAAA,EAAAA,UAAS,IAA5C,eAAOG,EAAP,KAAkBC,EAAlB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAK,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACHF,IACLG,EAAAA,EAAAA,IAAkBH,GACfI,MAAK,SAAAC,GAAQ,OAAIb,EAAWa,EAASC,QAAxB,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACR,IAgBJ,OACE,iCACE,UAACf,EAAD,CAAM0B,SAhBW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACflB,EACgB,KAAdJ,EAAmB,CAAEO,MAAOc,EAAKE,SAAShB,MAAMiB,OAAU,CAAC,GAE7DvB,EAAc,IACdoB,EAAKI,OACN,EAQG,WACE,SAAChC,EAAD,CACEiC,KAAK,OACLC,KAAK,QACLH,MAAOxB,EACP4B,SAAU,SAAAT,GAAC,OAXGK,EAWeL,EAAEG,cAAcE,MAAMK,mBAVzD5B,EAAcuB,GADM,IAAAA,CAWH,KAEb,SAAClC,EAAD,CAAWoC,KAAK,SAAhB,wBAEF,SAAChC,EAAD,UACGI,EAAOgC,KAAI,SAAAC,GACV,OACE,yBACE,SAACpC,EAAD,CAAiBqC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAM9B,GAAnD,SACG0B,EAAMK,SAFFL,EAAME,GAMlB,OAEH,SAAC,EAAAI,SAAD,CAAUC,UAAU,SAAC,IAAD,QAGzB,C,+LChEDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD1D,cACC5B,EADD,yBAGEA,EAAS8B,MAHX,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBL,EAAAA,EAAAA,IAAA,gBACZK,EADY,oBACOJ,EADP,oBADlB,cACC5B,EADD,yBAKEA,EAAS8B,MALX,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,uFACkBL,EAAAA,EAAAA,IAAA,gBACZK,EADY,4BACeJ,EADf,oBADlB,cACC5B,EADD,yBAKEA,EAAS8B,MALX,kEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,uFACkBL,EAAAA,EAAAA,IAAA,gBACZK,EADY,4BACeJ,EADf,oBADlB,cACC5B,EADD,yBAKEA,EAAS8B,MALX,kEAQA,SAAehC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,uFACkBgC,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCjC,EADnC,gCADlB,cACCK,EADD,yBAKEA,EAAS8B,MALX,kE","sources":["pages/movies-searchpage/movies-searchpage.styled.jsx","pages/movies-searchpage/movies-searchpage.jsx","services/fetchMovieApi.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const SearchBtn = styled('button')`\n  background-color: #4682b4;\n  border: none;\n  padding: 8px 10px;\n  margin-left: 10px;\n  border-radius: 10%;\n  &:hover {\n    background-color: #87cefa;\n  }\n`;\n\nexport const Form = styled('form')`\n  margin-top: 10px;\n  margin-left: 30px;\n`;\n\nexport const FormInput = styled('input')`\n  width: 200px;\n  height: 30px;\n  font-size: 20px;\n  &:hover {\n    background-color: #87cefa;\n  }\n`;\n\nexport const MoviesList = styled('ul')`\n  list-style: none;\n`;\n\nexport const StyledMovieLink = styled(Link)`\n  text-decoration: none;\n  color: #212121;\n  &:hover {\n    color: #87cefa;\n  }\n`;\n","import { useEffect, useState, Suspense } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchMovieByQuery } from 'services/fetchMovieApi';\nimport { Loader } from 'components/loader/loader';\nimport {\n  SearchBtn,\n  Form,\n  FormInput,\n  MoviesList,\n  StyledMovieLink,\n} from './movies-searchpage.styled';\n\nconst Movies = () => {\n  const [movies, SetAMovies] = useState([]);\n  const [movieName, setAMovieName] = useState('');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) return;\n    fetchMovieByQuery(query)\n      .then(response => SetAMovies(response.results))\n      .catch(error => console.log(error));\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams(\n      movieName !== '' ? { query: form.elements.query.value } : {}\n    );\n    setAMovieName('');\n    form.reset();\n  };\n\n  const onChangeInput = value => {\n    setAMovieName(value);\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"query\"\n          value={movieName}\n          onChange={e => onChangeInput(e.currentTarget.value.toLowerCase())}\n        />\n        <SearchBtn type=\"submit\">Search</SearchBtn>\n      </Form>\n      <MoviesList>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <StyledMovieLink to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </StyledMovieLink>\n            </li>\n          );\n        })}\n      </MoviesList>\n      <Suspense fallback={<Loader />} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '71c93644ec2284a1c063a4cc462c4087';\n\nexport async function fetchTrends() {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  return response.data;\n}\n\nexport async function fetchMovieById(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n}\n\nexport async function fetchMovieByQuery(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return response.data;\n}\n"],"names":["SearchBtn","styled","Form","FormInput","MoviesList","StyledMovieLink","Link","useState","movies","SetAMovies","movieName","setAMovieName","useSearchParams","searchParams","setSearchParams","location","useLocation","query","get","useEffect","fetchMovieByQuery","then","response","results","catch","error","console","log","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","name","onChange","toLowerCase","map","movie","to","id","state","from","title","Suspense","fallback","axios","API_KEY","fetchTrends","data","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}